name: Test and Publish

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies with pip
      run: |
        python -m pip install --upgrade pip
        pip install httpx pydantic psutil
        # Install optional dependencies for testing
        pip install fastapi starlette flask || echo "Optional dependencies failed"
        # Install linting tools
        pip install black isort mypy || echo "Dev tools failed"
    
    - name: Run basic tests
      run: |
        python test_basic.py
    
    - name: Run linting (optional)
      run: |
        black --check src/ || echo "Black formatting check failed"
        isort --check-only src/ || echo "Import sorting check failed"
    
    - name: Run type checking (optional)
      run: |
        mypy src/ || echo "Type checking completed with warnings"

  test-with-pdm:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install PDM
      run: |
        pip install pdm
    
    - name: Install dependencies with PDM
      run: |
        pdm install -d
    
    - name: Run tests with PDM
      run: |
        pdm run python test_basic.py

  publish:
    needs: [test, test-with-pdm]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install PDM
      run: |
        pip install pdm
    
    - name: Build package
      run: |
        pdm build
    
    - name: Publish to PyPI
      env:
        PDM_PUBLISH_USERNAME: __token__
        PDM_PUBLISH_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        pdm publish